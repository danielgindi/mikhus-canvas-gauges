{"version":3,"sources":["gauge.min.js"],"names":["ns","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendor","styles","getComputedStyle","document","documentElement","slice","join","match","OLink","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","animationTransformed","isFinite","isNaN","frame","requestAnimationFrame","inProgress","Collection","apply","this","arguments","verifyError","err","DOMException","result","formatContext","options","format","replace","validMember","member","prepareTicks","majorTicks","push","drawings","formatMajorTickNumber","minValue","maxValue","tickSide","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","valueDec","int","valueInt","s","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","isVertical","undefined","grad","createLinearGradient","addColorStop","drawShadow","restore","save","borderShadowWidth","shadowBlur","shadowColor","colorBorderShadow","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","font","target","baseSize","reset","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","valueTextShadow","colorValueTextShadow","drawValueBox","max","valueBox","addLength","maxValueWidth","repeat","String","parseInt","concat","map","text","valueText","direction","tunit","runit","tw","measureText","Number","width","th","fontValueSize","sw","valueBoxStroke","bmax","bw","bh","br","valueBoxBorderRadius","obw","valueBoxWidth","bx","by","gy","rect","grd","createRadialGradient","colorValueBoxRect","colorValueBoxRectEnd","stroke","colorValueBoxShadow","colorValueBoxBackground","fillStyle","fill","colorValueText","textAlign","textBaseline","fillText","normalizedValue","min","dt","normal","indented","drawRadialBorder","arc","maxRadialRadius","pxRatio","SmartCanvas","pixelRatio","maxRadius","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawRadialPlate","d0","r0","r1","r2","r3","shadowDrawn","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorPlateEnd","colorPlate","drawRadialHighlights","hlWidth","highlightsWidth","radialTicksRadius","highlights","vd","ticksAngle","hlt","rotate","HPI","startAngle","to","color","lineCap","highlightsLineCap","drawRadialMinorTicks","range","delta","minTicks","minorTicks","ratio","colorMinorTicks","colorStrokeTicks","exactTicks","BaseGauge","mod","closeStrokedPath","unit","barWidth","barStrokeWidth","drawRadialMajorTicks","colors","colorMajorTicks","radialNextAngle","strokeTicks","drawRadialNumbers","points","isAnimated","animationTarget","colorNumbers","plateValueAngle","textWidth","textHeight","fontNumbersSize","textRadius","sqrt","point","numbersMargin","drawRadialTitle","title","colorTitle","drawRadialUnits","units","colorUnits","drawRadialNeedle","needle","isFixed","barStartPosition","needleCircleSize","rIn","needleEnd","rStart","needleStart","pad1","needleWidth","pad2","colorNeedle","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInner","colorNeedleCircleInnerEnd","drawRadialValueBox","computeAngles","sa","ea","endAngle","midValue","drawRadialProgressBar","rMax","rMin","half","colorBarStroke","colorBar","barShadow","clip","colorBarShadow","barProgress","angles","colorBarProgress","displayValue","gauge","animatedValue","drawRectangle","colorStart","colorEnd","drawLinearBorder","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barBeginCircle","barLength","barMargin","x0","y0","dx","hasLeft","hasRight","ticksWidth","dy","barOffset","ticksLength","X","Y","baseX","baseY","ticksPadding","drawLinearBarShape","type","_barDimensions","fullBarLength","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","colorBarEnd","colorBarProgressEnd","drawLinearBar","hasTicksBar","notWhich","needleSide","numberSide","drawLinearBarProgress","drawLinearBarHighlights","_context$barDimension","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eStart","eW","drawLinearTick","drawLinearTicks","ticks","minVal","maxVal","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearMajorTicks","_drawings$prepareTick","_drawings$prepareTick2","_slicedToArray","valuePerNonExactTick","tick","_context$barDimension3","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_drawings$prepareTick3","_drawings$prepareTick4","ticksWidthMinor","drawLinearMajorTicksNumbers","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearTitle","_context$barDimension5","fontTitleSize","drawLinearUnits","_context$barDimension6","fontUnitsSize","drawLinearBarNeedle","_context$barDimension7","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","needleStyle","isRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","boxWidth","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_set","set","setter","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","EventEmitter","_events","addListener","on","removeListener","off","event","_len","args","_key","_len2","handlers","_key2","handler","wrapper","_handler","index","splice","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","cancel","performance","now","id","DomObserver","element","toDashed","Type","mutationsObserved","isObservable","MutationObserver","GAUGES_NO_AUTO_INIT","domReady","traverse","bind","node","tagName","getAttribute","elements","getElementsByTagName","process","observe","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","observer","forEach","attr","disconnect","destroy","_prop","part","_options","update","test","e","camelCase","str","dashed","readyState","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","clearRect","onRedraw","scale","redraw","devicePixelRatio","matchMedia","GenericOptions","animateOnInit","borders","listeners","animation","animationDuration","animationRule","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","getElementById","version","gauges","_EventEmitter","_this3","className","name","keys","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","_value","assign","configure","emit","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","m","defaultRadialGaugeOptions","useMinPath","RadialGauge","_BaseGauge","_ref","commit","drawImage","_context","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","_ref2","drawBox","module","exports"],"mappings":"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","file":"gauge.min.js","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.8\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/**\r\n * Look-ups for a proper vendor-specific property and returns its value\r\n *\r\n * @example\r\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\r\n * // it will refer properly to:\r\n * //  - window.requestAnimationFrame by default or to\r\n * //  - window.webkitRequestAnimationFrame or to\r\n * //  - window.mozRequestAnimationFrame or to\r\n * //  - window.msRequestAnimationFrame or to\r\n * //  - window.oRequestAnimationFrame\r\n * // depending on the current browser vendor\r\n *\r\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\r\n * @param {string} prop\r\n * @param {HTMLElement|Window|object} [from] - default is window\r\n * @returns {*}\r\n */\n\nvar vendor = null;\n\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    if (vendor === null) {\n        var styles = window.getComputedStyle(document.documentElement, '');\n        vendor = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'] || ['', ''])[1];\n    }\n\n    if (vendor === '') return null;\n\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    var vendorProp = from[vendor + capitalized];\n\n    /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n    if (typeof vendorProp !== 'undefined') {\n        return vendorProp;\n    }\n\n    return null;\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Class EventEmitter - base event manager\r\n */\n\nvar EventEmitter = function () {\n    /**\r\n     * @constructor\r\n     */\n    function EventEmitter() {\n        _classCallCheck(this, EventEmitter);\n\n        this._events = {};\n\n        this.addListener = this.on;\n        this.removeListener = this.off;\n    }\n\n    /**\r\n     * Returns all event listeners\r\n     *\r\n     * @return {object}\r\n     */\n\n\n    _createClass(EventEmitter, [{\n        key: 'emit',\n\n\n        /**\r\n         * Emits given event bypassing to each registered handler given args\r\n         *\r\n         * @param {string} event\r\n         * @param {...*} args\r\n         */\n        value: function emit(event) {\n            if (this._events[event]) {\n                var i = 0;\n                var s = this._events[event].length;\n\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                for (; i < s; i++) {\n                    this._events[event][i] && this._events[event][i].apply(this, args);\n                }\n            }\n        }\n\n        /**\r\n         * Registers given handler for given event to be called only once when\r\n         * event is emitted\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(event) {\n            for (var _len2 = arguments.length, handlers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                handlers[_key2 - 1] = arguments[_key2];\n            }\n\n            var i = 0;\n            var s = handlers.length;\n            var self = this;\n\n            var _loop = function _loop() {\n                var handler = handlers[i];\n                var wrapper = function wrapper() {\n                    self.off(event, wrapper);\n                    handler.apply(self, arguments);\n                };\n\n                handlers[i] = wrapper;\n            };\n\n            for (; i < s; i++) {\n                _loop();\n            }\n\n            this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\r\n         * Registers given handlers for a given events to be called each time event\r\n         * is emitted\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'on',\n        value: function on(event) {\n            if (!this._events[event]) {\n                this._events[event] = [];\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                this._events[event].push(arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n            }\n        }\n\n        /**\r\n         * Un-registers previously registered event handlers\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(event) {\n            if (!this._events[event]) {\n                return;\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                var _handler = arguments.length <= i + 1 ? undefined : arguments[i + 1];\n                var index = void 0;\n\n                while (~(index = this._events[event].indexOf(_handler))) {\n                    this._events[event].splice(index, 1);\n                }\n            }\n        }\n\n        /**\r\n         * Removes all listeners for a given event\r\n         *\r\n         * @param {string} event\r\n         */\n\n    }, {\n        key: 'removeAllListeners',\n        value: function removeAllListeners(event) {\n            delete this._events[event];\n        }\n    }, {\n        key: 'listeners',\n        get: function get() {\n            return this._events;\n        }\n    }]);\n\n    return EventEmitter;\n}();\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/* jshint -W079 */\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n\n/* istanbul ignore next */\n/**\r\n * @type {function(\r\n *   callback: function(time: number): number,\r\n *   element?: HTMLElement,\r\n * )}\r\n * @access private\r\n */\n\n\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\r\n * Generic AnimationRule function interface\r\n *\r\n * @typedef {function(percent: number): number} AnimationRule\r\n */\n\n/**\r\n * Callback for animation step draw event.\r\n * It will be called each time animation step is executed, bypassing\r\n * as first argument a percent of animation completeness. It is expected\r\n * that this callback will do an actual work of animating an elements or\r\n * whatever, as far as animation engine is just calculating and executing\r\n * animation steps without any knowledge about things under animation.\r\n *\r\n * @typedef {function(percent: number): *} DrawEventCallback\r\n */\n\n/**\r\n * Callback for animation complete event.\r\n * It is called once each animation is complete.\r\n *\r\n * @typedef {function(): *} EndEventCallback\r\n */\n\n/**\r\n * Predefined known animation rules.\r\n * It's a simple collection of math for some most used animations.\r\n *\r\n * @typedef {{\r\n *   linear: AnimationRule,\r\n *   quad: AnimationRule,\r\n *   dequad: AnimationRule,\r\n *   quint: AnimationRule,\r\n *   dequint: AnimationRule,\r\n *   cycle: AnimationRule,\r\n *   decycle: AnimationRule,\r\n *   bounce: AnimationRule,\r\n *   debounce: AnimationRule,\r\n *   elastic: AnimationRule,\r\n *   delastic: AnimationRule,\r\n * }} AnimationRules\r\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Evaluates animation step and decides if the next step required or\r\n * stops animation calling a proper events.\r\n *\r\n * @access private\r\n * @param {number} time\r\n * @param {DrawEventCallback} draw\r\n * @param {number} start\r\n * @param {AnimationRule} rule\r\n * @param {number} duration\r\n * @param {EndEventCallback} end\r\n * @param {Animation} anim\r\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    if (percent !== 1) {\n        animationTransformed = rule(percent);\n\n        // make sure we have correct number after applying animation\n        // transformation\n        if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n            percent = animationTransformed;\n        }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n        anim.inProgress = false;\n    }\n}\n\n/**\r\n * Animation engine API for JavaScript-based animations.\r\n * This is simply an animation core framework which simplifies creation\r\n * of various animations for generic purposes.\r\n *\r\n * @example\r\n * // create 'linear' animation engine, 500ms duration\r\n * let linear = new Animation('linear', 500);\r\n *\r\n * // create 'elastic' animation engine\r\n * let elastic = new Animation('elastic');\r\n *\r\n * // define animation behavior\r\n * let bounced = new Animation('bounce', 500, percent => {\r\n *     let value = parseInt(percent * 100, 10);\r\n *\r\n *     $('div.bounced').css({\r\n *         width: value + '%',\r\n *         height: value + '%'\r\n *     });\r\n * });\r\n *\r\n * // execute animation\r\n * bounced.animate();\r\n *\r\n * // execute animation and handle when its finished\r\n * bounced.animate(null, () => {\r\n *    console.log('Animation finished!');\r\n * });\r\n */\n\nvar Animation = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {string|AnimationRule} rule\r\n     * @param {number} duration\r\n     * @param {DrawEventCallback} [draw]\r\n     * @param {EndEventCallback} [end]\r\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\r\n         * Overall animation duration in milliseconds.\r\n         * By default is equal to 250 ms.\r\n         *\r\n         * @type {number}\r\n         */\n        this.duration = duration;\n\n        /**\r\n         * Animation rule. By default is linear animation.\r\n         * Animation rule is a subject to animation rules, which are\r\n         * a simple object containing math-based methods for calculating\r\n         * animation steps.\r\n         *\r\n         * @type {string|AnimationRule}\r\n         */\n        this.rule = rule;\n\n        /**\r\n         * Callback function for the animation step draw event.\r\n         *\r\n         * @type {DrawEventCallback}\r\n         */\n        this.draw = draw;\n\n        /**\r\n         * Callback for the animation complete event.\r\n         *\r\n         * @type {EndEventCallback}\r\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\r\n     * Performs animation calling each animation step draw callback and\r\n     * end callback at the end of animation. Callbacks are optional to this\r\n     * method call. If them are not bypassed will be used that ones which\r\n     * was pre-set on constructing an Animation object or pre-set after\r\n     * construction.\r\n     *\r\n     * @example\r\n     * function draw(percent) {\r\n     *     $('.my-animated-divs').css({\r\n     *         width: parseInt(percent * 100, 10) + '%'\r\n     *     });\r\n     * }\r\n     * function done() {\r\n     *     console.log('Animation complete!');\r\n     * }\r\n     *\r\n     * // Define 'draw' and 'end' callbacks on construction\r\n     * var animation = new Animation('cycle', 500, draw, done);\r\n     * animation.animate();\r\n     *\r\n     * // Define 'draw' and 'end' callbacks after construction\r\n     * var animation = new Animation('cycle', 500);\r\n     * animation.draw = draw;\r\n     * animation.end = done;\r\n     * animation.animate();\r\n     *\r\n     * // Define 'draw' and 'end' callbacks at animation\r\n     * var animation = new Animation('cycle', 500);\r\n     * animation.animate(draw, done);\r\n     *\r\n     * @param {DrawEventCallback} [draw]\r\n     * @param {EndEventCallback} [end]\r\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            this.frame && this.cancel();\n\n            // noinspection JSUnresolvedVariable\n            var start = window.performance && window.performance.now ? window.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            this.draw = draw;\n            this.end = end;\n\n            /**\r\n             * Current requested animation frame identifier\r\n             *\r\n             * @type {number}\r\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\r\n         * Cancels current animation if any\r\n         */\n\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n        }\n\n        /**\r\n         * Destroys this object properly\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.cancel();\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\r\n * Animation rules bound statically to Animation constructor.\r\n *\r\n * @type {AnimationRules}\r\n * @static\r\n */\n\n\nAnimation.rules = rules;\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/**\r\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\r\n */\n/**\r\n * @typedef {{parse: function, stringify: function}} JSON\r\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\r\n */\n/**\r\n * @ignore\r\n * @typedef {{MutationObserver: function}} ns\r\n */\n\n/**\r\n * DOM Observer.\r\n * It will observe DOM document for a configured element types and\r\n * instantiate associated Types for an existing or newly added DOM elements\r\n *\r\n * @example\r\n * class ProgressBar {\r\n *     constructor(options) {}\r\n *     draw() {}\r\n * }\r\n *\r\n * // It will observe DOM document for elements <div>\r\n * // having attribute 'data-type=\"progress\"'\r\n * // and instantiate for each new instance of ProgressBar\r\n *\r\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\r\n *\r\n * // assume we could have HTML like this\r\n * // <div data-type=\"progress\" color=\"blue\"></div>\r\n * // in this case all matching attributes names for a given options will be\r\n * // parsed and bypassed to an instance from HTML attributes\r\n */\n\nvar DomObserver = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {object} options\r\n     * @param {string} element\r\n     * @param {string} type\r\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\r\n         * Default instantiation options for the given type\r\n         *\r\n         * @type {Object}\r\n         */\n        this.options = options;\n\n        /**\r\n         * Name of an element to lookup/observe\r\n         *\r\n         * @type {string}\r\n         */\n        this.element = element.toLowerCase();\n\n        /**\r\n         * data-type attribute value to lookup\r\n         *\r\n         * @type {string}\r\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\r\n         * Actual type constructor to instantiate for each found element\r\n         *\r\n         * @type {Function}\r\n         */\n        this.Type = ns[type];\n\n        /**\r\n         * Signals if mutations observer for this type or not\r\n         *\r\n         * @type {boolean}\r\n         */\n        this.mutationsObserved = false;\n\n        /**\r\n         * Flag specifies whenever the browser supports observing\r\n         * of DOM tree mutations or not\r\n         *\r\n         * @type {boolean}\r\n         */\n        this.isObservable = !!window.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        if (!window.GAUGES_NO_AUTO_INIT) {\n            DomObserver.domReady(this.traverse.bind(this));\n        }\n    }\n\n    /**\r\n     * Checks if given node is valid node to process\r\n     *\r\n     * @param {Node|HTMLElement} node\r\n     * @returns {boolean}\r\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\r\n         * Traverse entire current DOM tree and process matching nodes.\r\n         * Usually it should be called only once on document initialization.\r\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\r\n         * Observes given mutation records for an elements to process\r\n         *\r\n         * @param {MutationRecord[]} records\r\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Parses given attribute value to a proper JavaScript value.\r\n         * For example it will parse some stringified value to a proper type\r\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\r\n         *\r\n         * @param {*} value\r\n         * @return {*}\r\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\r\n         * Processes a given node, instantiating a proper type constructor for it\r\n         *\r\n         * @param {Node|HTMLElement} node\r\n         * @returns {GaugeInterface|null}\r\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            if (_prop === 'value') {\n                                instance && (instance.value = _options[_prop]);\n                            } else {\n                                instance.update && instance.update(_options);\n                            }\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\r\n         * Transforms camelCase string to dashed string\r\n         *\r\n         * @static\r\n         * @param {string} camelCase\r\n         * @return {string}\r\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\r\n         * Transforms dashed string to CamelCase representation\r\n         *\r\n         * @param {string} dashed\r\n         * @param {boolean} [capitalized]\r\n         * @return {string}\r\n         */\n\n    }, {\n        key: 'toCamelCase',\n        value: function toCamelCase(dashed) {\n            var capitalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = '';\n\n            for (; i < s; i++) {\n                if (!(i || capitalized)) {\n                    str += arr[i].toLowerCase();\n                } else {\n                    str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n                }\n            }\n\n            return str;\n        }\n\n        /**\r\n         * Transforms camel case property name to dash separated attribute name\r\n         *\r\n         * @static\r\n         * @param {string} str\r\n         * @returns {string}\r\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\r\n         * Cross-browser DOM ready handler\r\n         *\r\n         * @static\r\n         * @param {Function} handler\r\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((window.document || {}).readyState + '')) return handler();\n\n            if (window.addEventListener) window.addEventListener('DOMContentLoaded', handler, false);else if (window.attachEvent) window.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n\n/**\r\n * Drawings on canvas using hidden canvas as a cache for better\r\n * performance drawings during canvas animations. SmartCanvas also\r\n * adopts a canvas to\r\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {number} [width]\r\n     * @param {number} [height]\r\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\r\n         * Canvas base width\r\n         *\r\n         * @type {number}\r\n         */\n        this.width = width || 0;\n\n        /**\r\n         * Canvas base height\r\n         *\r\n         * @type {number}\r\n         */\n        this.height = height || 0;\n\n        /**\r\n         * Target drawings canvas element\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\r\n     * Initializes canvases and contexts\r\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\r\n             * Canvas caching element\r\n             *\r\n             * @type {HTMLCanvasElement|Node}\r\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\r\n             * Target drawings canvas element 2D context\r\n             *\r\n             * @type {CanvasRenderingContext2D}\r\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\r\n             * Canvas caching element 2D context\r\n             *\r\n             * @type {CanvasRenderingContext2D}\r\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\r\n             * Actual drawings width\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawWidth = this.element.width;\n\n            /**\r\n             * Actual drawings height\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawHeight = this.element.height;\n\n            /**\r\n             * X-coordinate of drawings zero point\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\r\n             * Y-coordinate of drawings zero point\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\r\n             * Minimal side length in pixels of the drawing\r\n             *\r\n             * @type {number}\r\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\r\n         * Destroys this object, removing the references from memory\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\r\n             * On canvas redraw event callback\r\n             *\r\n             * @type {function|null|undefined}\r\n             */\n            this.onRedraw = null;\n        }\n\n        /**\r\n         * Commits the drawings\r\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\r\n         * Redraw this object\r\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\r\n             * On canvas redraw event callback\r\n             *\r\n             * @type {function(): *}\r\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\r\n         * Returns current device pixel ratio\r\n         *\r\n         * @returns {number}\r\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\r\n         * Forces redraw all canvas in the current collection\r\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Describes rendering target element. Can be either string identifier of\r\n * the element or the element itself.\r\n *\r\n * @typedef {HTMLElement|string} RenderTarget\r\n */\n\n/**\r\n * Highlight area definition.\r\n * It describes highlight area starting from value to value using\r\n * color. Color can be describes with hex, rgb or rgba value.\r\n *\r\n * @typedef {{ from: number, to: number, color: string}} Highlight\r\n */\n\n/**\r\n * Shared generic gauges options\r\n *\r\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number, listeners: object}} GenericOptions\r\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n\n    listeners: null,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorStrokeTicks: '',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarProgress: '#888',\n    colorBarShadow: '#000',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15,\n    highlightsLineCap: 'butt',\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n};\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Gauge collections type.\r\n *\r\n * It is used ES5 declaration here, because babel\r\n * transpiles inheritance incorrectly in this case.\r\n *\r\n * @class Collection\r\n * @constructor\r\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\r\n * Returns gauge object by its identifier or index in the collection\r\n *\r\n * @param {string|number} id\r\n * @return {*}\r\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\nvar version = '2.1.8';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\r\n * Basic abstract BaseGauge class implementing common functionality\r\n * for different type of gauges.\r\n *\r\n * It should not be instantiated directly but must be extended by a final\r\n * gauge implementation.\r\n *\r\n * @abstract\r\n * @example\r\n *\r\n * class MyCoolGauge extends BaseGauge {\r\n *\r\n *     // theses methods below MUST be implemented:\r\n *\r\n *     constructor(options) {\r\n *        // ... do something with options\r\n *        super(options);\r\n *        // ... implement anything else\r\n *     }\r\n *\r\n *     draw() {\r\n *         // ... some implementation here\r\n *         return this;\r\n *     }\r\n * }\r\n */\n\nvar BaseGauge = function (_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\r\n     * Fired each time gauge is initialized on a page\r\n     *\r\n     * @event BaseGauge#init\r\n     */\n\n    /**\r\n     * Fired each time gauge scene is rendered\r\n     *\r\n     * @event BaseGauge#render\r\n     */\n\n    /**\r\n     * Fired each time gauge object is destroyed\r\n     *\r\n     * @event BaseGauge#destroy\r\n     */\n\n    /**\r\n     * Fired each time before animation is started on the gauge\r\n     *\r\n     * @event BaseGauge#animationStart\r\n     */\n\n    /**\r\n     * Fired each time animation scene is complete\r\n     *\r\n     * @event BaseGauge#animate\r\n     * @type {number} percent\r\n     * @type {number} value\r\n     */\n\n    /**\r\n     * Fired each time animation is complete on the gauge\r\n     *\r\n     * @event BaseGauge#animationEnd\r\n     */\n\n    /**\r\n     * @event BaseGauge#value\r\n     * @type {number} newValue\r\n     * @type {number} oldValue\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @abstract\r\n     * @param {GenericOptions} options\r\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var _this3 = _possibleConstructorReturn(this, (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this));\n\n        var className = _this3.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(_this3);\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(function (event) {\n                var handlers = options.listeners[event] instanceof Array ? options.listeners[event] : [options.listeners[event]];\n\n                handlers.forEach(function (handler) {\n                    _this3.on(event, handler);\n                });\n            });\n        }\n\n        //noinspection JSUnresolvedVariable\n        /**\r\n         * Gauges version string\r\n         *\r\n         * @type {string}\r\n         */\n        _this3.version = version;\n\n        /**\r\n         * Gauge type class\r\n         *\r\n         * @type {BaseGauge} type\r\n         */\n        _this3.type = ns[className] || BaseGauge;\n\n        /**\r\n         * True if gauge has been drawn for the first time, false otherwise.\r\n         *\r\n         * @type {boolean}\r\n         */\n        _this3.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\r\n         * Gauge options\r\n         *\r\n         * @type {GenericOptions} options\r\n         */\n        _this3.options = options || {};\n\n        if (_this3.options.animateOnInit) {\n            _this3._value = _this3.options.value;\n            _this3.options.value = _this3.options.minValue;\n        }\n\n        /**\r\n         * @type {SmartCanvas} canvas\r\n         */\n        _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n        _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n        /**\r\n         * @type {Animation} animation\r\n         */\n        _this3.animation = new Animation(options.animationRule, options.animationDuration);\n        return _this3;\n    }\n\n    /**\r\n     * Sets new value for this gauge.\r\n     * If gauge is animated by configuration it will trigger a proper animation.\r\n     * Upsetting a value triggers gauge redraw.\r\n     *\r\n     * @param {number} value\r\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\r\n         * Updates gauge configuration options at runtime and redraws the gauge\r\n         *\r\n         * @param {RadialGaugeOptions} options\r\n         * @returns {BaseGauge}\r\n         */\n        value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\r\n         * Performs destruction of this object properly\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit('destroy');\n        }\n\n        /**\r\n         * Returns gauges version string\r\n         *\r\n         * @return {string}\r\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\r\n         * Triggering gauge render on a canvas.\r\n         *\r\n         * @abstract\r\n         * @returns {BaseGauge}\r\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n                this.emit('init');\n            }\n\n            this.emit('render');\n\n            return this;\n        }\n\n        /**\r\n         * Inject given gauge object into DOM\r\n         *\r\n         * @param {string} type\r\n         * @param {GenericOptions} options\r\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n                return;\n            }\n\n            if (this.options.animation) {\n                if (this.animation.frame) {\n                    // animation is already in progress -\n                    // forget related old animation value\n                    // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                    this.options.value = this._value;\n\n                    // if there is no actual value change requested stop it\n                    if (this._value === value) {\n                        this.animation.cancel();\n                        delete this._value;\n                        return;\n                    }\n                }\n\n                /**\r\n                 * @type {number}\r\n                 * @access private\r\n                 */\n                if (this._value === undefined) {\n                    this._value = value;\n                }\n\n                this.emit('animationStart');\n\n                this.animation.animate(function (percent) {\n                    var newValue = fromValue + (value - fromValue) * percent;\n\n                    _this4.options.animatedValue && _this4.emit('value', newValue, _this4.value);\n\n                    _this4.options.value = newValue;\n\n                    _this4.draw();\n\n                    _this4.emit('animate', percent, _this4.options.value);\n                }, function () {\n                    if (_this4._value !== undefined) {\n                        _this4.emit('value', _this4._value, _this4.value);\n                        _this4.options.value = _this4._value;\n                        delete _this4._value;\n                    }\n\n                    _this4.draw();\n                    _this4.emit('animationEnd');\n                });\n            } else {\n                this.emit('value', value, this.value);\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\r\n         * Returns current value of the gauge\r\n         *\r\n         * @return {number}\r\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n\n        /**\r\n         * Updates gauge options\r\n         *\r\n         * @param {*} options\r\n         * @return {BaseGauge}\r\n         * @access protected\r\n         */\n\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            return options;\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(type, options) {\n            return new DomObserver(options, 'canvas', type);\n        }\n\n        /**\r\n         * Initializes gauge from a given HTML element\r\n         * (given element should be valid HTML canvas gauge definition)\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\n\n    }, {\n        key: 'fromElement',\n        value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(element.getAttribute('data-type'));\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n                return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n                type += 'Gauge';\n            }\n\n            for (; i < s; i++) {\n                options[DomObserver.toCamelCase(attributes[i].name.replace(/^data-/, ''), false)] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n        }\n\n        /**\r\n         * Ensures value is proper number\r\n         *\r\n         * @param {*} value\r\n         * @param {number} min\r\n         * @return {number}\r\n         */\n\n    }, {\n        key: 'ensureValue',\n        value: function ensureValue(value) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = parseFloat(min) || 0;\n            }\n\n            return value;\n        }\n\n        /**\r\n         * Corrects javascript modulus bug\r\n         * @param {number} n\r\n         * @param {number} m\r\n         * @return {number}\r\n         */\n\n    }, {\n        key: 'mod',\n        value: function mod(n, m) {\n            return (n % m + m) % m;\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}(EventEmitter);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    ns['gauges'] = (window.document || {})['gauges'] = gauges;\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * @access private\r\n * @typedef {CanvasRenderingContext2D | {\r\n *   max: number,\r\n *   maxRadius: number,\r\n *   barDimensions: object,\r\n * }} Canvas2DContext\r\n */\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Examines if a given error is something to throw or to ignore\r\n *\r\n * @param {Error} err\r\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\nvar validMember = /{([_a-zA-Z]+[_a-zA-Z0-9]*)}/g;\n\n/**\r\n * Format string unit string format using option members\r\n * Format option to set the “units” attribute.\r\n * For example “{value} % {title}” which replaces the attributes inside {} to\r\n * the same member in the option object.\r\n * So if title is set to “Hour” and value to “50” the units will be “50% Hour”.\r\n *\r\n * @param {GenericOptions|any} options\r\n * @param {string} format\r\n * @return {string}\r\n */\nfunction formatContext(options, format) {\n    // \"{value} % {Title}\"\n\n    return format.replace(validMember, function (match, member) {\n        var value = options[member];\n        return typeof value !== 'undefined' ? value : match;\n    });\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Prepares major ticks data\r\n *\r\n * @access private\r\n * @param {GenericOptions|{ tickSide: string }} options\r\n * @return {[boolean, boolean]}\r\n */\nfunction prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rounded corners rectangle\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {number} r\r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Pads a given value with leading zeros using the given options\r\n *\r\n * @param {number} val\r\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\r\n * @returns {string}\r\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Formats a number for display on the dial's plate using the majorTicksFormat\r\n * config option.\r\n *\r\n * @param {number} num number to format\r\n * @param {object} options\r\n * @returns {string} formatted number\r\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Transforms degrees to radians\r\n *\r\n * @param {number} degrees\r\n * @returns {number}\r\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Calculates and returns radial point coordinates\r\n *\r\n * @param {number} radius\r\n * @param {number} angle\r\n * @returns {{x: number, y: number}}\r\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Creates and returns linear gradient canvas object\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {string} colorFrom\r\n * @param {string} colorTo\r\n * @param {number} length\r\n * @param {boolean} [isVertical]\r\n * @param {number} [from]\r\n * @returns {CanvasGradient}\r\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws the shadow if it was not drawn\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {GenericOptions} options\r\n * @param {boolean} shadowDrawn\r\n * @return {boolean}\r\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge needle shadow\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Constructs font styles for canvas fonts\r\n *\r\n * @param {GenericOptions} options\r\n * @param {string} target\r\n * @param {number} baseSize\r\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Resets some context settings\r\n *\r\n * @param {Canvas2DContext} context\r\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Declares to drow value text shadow if configured\r\n *\r\n * @param context\r\n * @param options\r\n * @param offset\r\n * @param blur\r\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws value box at given position\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {GenericOptions} options\r\n * @param {number|string} value\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} max\r\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = '9'.repeat(Math.max.apply(null, [String(parseInt(value)).length + addLength].concat(options.majorTicks.map(function (val) {\n        return String(parseInt(val, 10)).length + addLength;\n    }))));\n    var text = options.valueText;\n    if (!text) {\n        text = padValue(value, options);\n        if (context.direction === 'rtl') text = '\\u200E' + text; // Force the numeric value to be LTR\n    }\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(Number(maxValueWidth), options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns normalized value\r\n *\r\n * @param {GenericOptions} options\r\n * @return {{normal: number, indented: number}}\r\n */\nfunction normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * 0.01;\n\n    return {\n        normal: value < min ? min : value > max ? max : value,\n        indented: value < min ? min - dt : value > max ? max + dt : value\n    };\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue,\n    formatContext: formatContext\n};\n\ndrawings;\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\r\n * Gauge configuration options\r\n *\r\n * @typedef {GenericOptions | {\r\n *   exactTicks: boolean,\r\n *   ticksAngle: number,\r\n *   startAngle: number,\r\n *   colorNeedleCircleOuter: string,\r\n *   colorNeedleCircleOuterEnd: string,\r\n *   colorNeedleCircleInner: string,\r\n *   colorNeedleCircleInnerEnd: string,\r\n *   needleCircleSize: number,\r\n *   needleCircleInner: boolean,\r\n *   needleCircleOuter: boolean,\r\n *   animationTarget: string,\r\n *   useMinPath: boolean,\r\n *   barStartPosition: 'right' | 'left',\r\n * }} RadialGaugeOptions\r\n */\n\n/**\r\n * Default gauge configuration options\r\n *\r\n * @access private\r\n * @type {RadialGaugeOptions}\r\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: 'needle', // 'needle' or 'plate'\n    useMinPath: false,\n\n    barWidth: 0,\n    barStartPosition: 'left'\n});\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gradient-filled circle on a canvas\r\n *\r\n * @access private\r\n * @param {number} radius\r\n * @param {number} width\r\n * @param {Canvas2DContext} context\r\n * @param {string} start gradient start color\r\n * @param {string} end gradient end color\r\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns max radius without borders for the gauge\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n * @return {number}\r\n */\nfunction maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge plate on the canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - options.borderOuterWidth * pxRatio / 2;\n    var r1 = r0 - options.borderOuterWidth * pxRatio / 2 - options.borderMiddleWidth * pxRatio / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth * pxRatio / 2 - options.borderInnerWidth * pxRatio / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth * pxRatio, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth * pxRatio, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth * pxRatio, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge highlight areas on a canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.lineCap = options.highlightsLineCap;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws minor ticks bar on a canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n        range = void 0,\n        angle = void 0;\n    var i = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n        range = options.maxValue - options.minValue;\n        s = minTicks ? range / minTicks : 0;\n        delta = (BaseGauge.mod(options.majorTicks[0], minTicks) || 0) * ratio;\n    } else {\n        s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n        if (angle <= options.ticksAngle + options.startAngle) {\n            context.rotate(drawings.radians(angle));\n\n            context.beginPath();\n            context.moveTo(0, radius);\n            context.lineTo(0, radius - context.max * 0.075);\n            closeStrokedPath(context);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns ticks radius\r\n *\r\n * @access private\r\n * @param context\r\n * @param options\r\n * @return {number}\r\n */\nfunction radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return maxRadialRadius(context, options) - 5 * unit - (options.barWidth ? (parseFloat(options.barStrokeWidth) || 0) * 2 + ((parseFloat(options.barWidth) || 0) + 5) * unit : 0);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge major ticks bar on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorStrokeTicks || options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n        var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n        return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Strokes, closes path and restores previous context state\r\n *\r\n * @param {Canvas2DContext} context\r\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar numbers\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, 'Numbers', context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s);\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius = Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(radius - textRadius - options.numbersMargin / 100 * context.max, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge title\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws units name on the gauge\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(drawings.formatContext(options, options.units), 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge needle\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.ticksAngle < 360 ? drawings.normalizedValue(options).indented : options.value;\n    var startAngle = isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    if (options.barStartPosition === 'right') {\n        startAngle = options.startAngle + options.ticksAngle - (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    }\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(startAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rStart);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rStart);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rStart);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rStart);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rStart);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge value box\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n * @param {number} value\r\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Computes start and end angle depending on barStartPositionOption\r\n *\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction computeAngles(options) {\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n    var startAngle = sa;\n    var endAngle = sa + (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    if (options.barStartPosition === 'middle') {\n        var midValue = (options.minValue + options.maxValue) * 0.5;\n        if (options.value < midValue) {\n            startAngle = 180 - (midValue - drawings.normalizedValue(options).normal) / (options.maxValue - options.minValue) * options.ticksAngle;\n            endAngle = 180;\n        } else {\n            startAngle = 180;\n            endAngle = 180 + (drawings.normalizedValue(options).normal - midValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n        }\n    } else if (options.barStartPosition === 'right') {\n        startAngle = ea - endAngle + sa;\n        endAngle = ea;\n    }\n    return { startAngle: startAngle, endAngle: endAngle };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge progress bar\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth + '') || 0;\n    var w = (parseFloat(options.barWidth + '') || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n        // draw stroke\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa) - delta, drawings.radians(ea) + delta, false);\n        context.strokeStyle = options.colorBarStroke;\n        context.lineWidth = half * 2;\n        context.stroke();\n        context.closePath();\n    }\n\n    if (w) {\n        // draw bar\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n\n        if (options.barShadow) {\n            // draw shadow\n            context.beginPath();\n            context.arc(0, 0, rMax, drawings.radians(sa), drawings.radians(ea), false);\n            context.clip();\n\n            context.beginPath();\n            context.strokeStyle = options.colorBar;\n            context.lineWidth = 1;\n            context.shadowBlur = options.barShadow;\n            context.shadowColor = options.colorBarShadow;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n            context.arc(0, 0, rMax, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n            context.stroke();\n            context.closePath();\n\n            context.restore();\n            context.rotate(HPI);\n        }\n\n        // draw bar progress\n        if (options.barProgress) {\n            var angles = computeAngles(options);\n            var startAngle = angles.startAngle;\n            var endAngle = angles.endAngle;\n\n            context.beginPath();\n            context.arc(0, 0, r, drawings.radians(startAngle), drawings.radians(endAngle), false);\n            context.strokeStyle = options.colorBarProgress;\n            context.lineWidth = w;\n            context.stroke();\n            context.closePath();\n        }\n    }\n\n    context.restore();\n}\n\n/**\r\n * Find and return gauge value to display\r\n *\r\n * @param {RadialGauge} gauge\r\n */\nfunction displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n        return gauge.options.value;\n    }\n\n    return gauge.value;\n}\n\n/**\r\n * Minimalistic HTML5 Canvas Gauge\r\n * @example\r\n *  var gauge = new RadialGauge({\r\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\r\n *     width: 400,\r\n *     height: 400,\r\n *     units: 'Km/h',\r\n *     title: false,\r\n *     value: 0,\r\n *     minValue: 0,\r\n *     maxValue: 220,\r\n *     majorTicks: [\r\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\r\n *     ],\r\n *     minorTicks: 2,\r\n *     strokeTicks: false,\r\n *     highlights: [\r\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\r\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\r\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\r\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\r\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\r\n *     ],\r\n *     colorPlate: '#222',\r\n *     colorMajorTicks: '#f5f5f5',\r\n *     colorMinorTicks: '#ddd',\r\n *     colorTitle: '#fff',\r\n *     colorUnits: '#ccc',\r\n *     colorNumbers: '#eee',\r\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\r\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\r\n *     valueBox: true,\r\n *     animationRule: 'bounce'\r\n * });\r\n * // draw initially\r\n * gauge.draw();\r\n * // animate\r\n * setInterval(() => {\r\n *    gauge.value = Math.random() * -220 + 220;\r\n * }, 1000);\r\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\r\n     * Fired each time before gauge plate is drawn\r\n     *\r\n     * @event RadialGauge#beforePlate\r\n     */\n\n    /**\r\n     * Fired each time before gauge highlight areas are drawn\r\n     *\r\n     * @event RadialGauge#beforeHighlights\r\n     */\n\n    /**\r\n     * Fired each time before gauge minor ticks are drawn\r\n     *\r\n     * @event RadialGauge#beforeMinorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge major ticks are drawn\r\n     *\r\n     * @event RadialGauge#beforeMajorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge tick numbers are drawn\r\n     *\r\n     * @event RadialGauge#beforeNumbers\r\n     */\n\n    /**\r\n     * Fired each time before gauge title is drawn\r\n     *\r\n     * @event RadialGauge#beforeTitle\r\n     */\n\n    /**\r\n     * Fired each time before gauge units text is drawn\r\n     *\r\n     * @event RadialGauge#beforeUnits\r\n     */\n\n    /**\r\n     * Fired each time before gauge progress bar is drawn\r\n     *\r\n     * @event RadialGauge#beforeProgressBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge value box is drawn\r\n     *\r\n     * @event RadialGauge#beforeValueBox\r\n     */\n\n    /**\r\n     * Fired each time before gauge needle is drawn\r\n     *\r\n     * @event RadialGauge#beforeNeedle\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @param {RadialGaugeOptions} options\r\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, RadialGauge.configure(options)));\n    }\n\n    /**\r\n     * Checks and updates gauge options properly\r\n     *\r\n     * @param {*} options\r\n     * @return {*}\r\n     * @access protected\r\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n\n\n        /**\r\n         * Triggering gauge render on a canvas.\r\n         *\r\n         * @returns {RadialGauge}\r\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref[0],\n                    y = _ref[1],\n                    w = _ref[2],\n                    h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        this.emit('beforePlate');\n                        drawRadialPlate(context, options);\n                        this.emit('beforeHighlights');\n                        drawRadialHighlights(context, options);\n                        this.emit('beforeMinorTicks');\n                        drawRadialMinorTicks(context, options);\n                        this.emit('beforeMajorTicks');\n                        drawRadialMajorTicks(context, options);\n                        this.emit('beforeNumbers');\n                        drawRadialNumbers(context, options);\n                        this.emit('beforeTitle');\n                        drawRadialTitle(context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n                    this.emit('beforeValueBox');\n                    drawRadialValueBox(canvas.context, options, displayValue(this));\n                    this.emit('beforeNeedle');\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforePlate');\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    this.emit('beforeHighlights');\n                    drawRadialHighlights(canvas.context, options);\n                    this.emit('beforeMinorTicks');\n                    drawRadialMinorTicks(canvas.context, options);\n                    this.emit('beforeMajorTicks');\n                    drawRadialMajorTicks(canvas.context, options);\n                    this.emit('beforeNumbers');\n                    drawRadialNumbers(canvas.context, options);\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        this.emit('beforeTitle');\n                        drawRadialTitle(_context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(_context, options);\n                        this.emit('beforeNeedle');\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                this.emit('beforeValueBox');\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'value',\n\n\n        /**\r\n         * Sets the value for radial gauge\r\n         *\r\n         * @param {number} value\r\n         */\n        set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (this.options.animation && this.options.ticksAngle === 360 && this.options.useMinPath) {\n                this._value = value;\n                value = this.options.value + ((value - this.options.value) % 360 + 540) % 360 - 180;\n            }\n\n            _set(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', value, this);\n        }\n\n        /**\r\n         * Returns current gauge value\r\n         *\r\n         * @return {number}\r\n         */\n        ,\n        get: function get() {\n            return _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', this);\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Linear gauge configuration options\r\n *\r\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\r\n */\n\n/**\r\n * Default linear gauge configuration options\r\n *\r\n * @type {LinearGaugeOptions}\r\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: '',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rectangle on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\r\n * @param {number} x x-coordinate of the top-left corner\r\n * @param {number} y y-coordinate of the top-left corner\r\n * @param {number} w width of the rectangle\r\n * @param {number} h height of the rectangle\r\n * @param {string} colorStart base fill color of the rectangle\r\n * @param {string} [colorEnd] gradient color of the rectangle\r\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rectangle on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} width width of the border\r\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\r\n * @param {number} x x-coordinate of the top-left corner\r\n * @param {number} y y-coordinate of the top-left corner\r\n * @param {number} w width of the rectangle\r\n * @param {number} h height of the rectangle\r\n * @param {string} colorStart base fill color of the rectangle\r\n * @param {string} [colorEnd] gradient color of the rectangle\r\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge plate\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 = w1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var w3 = w2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 = h1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var h3 = h2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth * pxRatio, r, x + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, y + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth * pxRatio, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, y2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth * pxRatio, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, y3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Calculates and returns linear gauge base bar dimensions.\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\r\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws bar shape from the given options on a given canvas context\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {string} type\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h),\n        isVertical = _barDimensions.isVertical,\n        width = _barDimensions.width,\n        barWidth = _barDimensions.barWidth,\n        barLength = _barDimensions.barLength,\n        strokeWidth = _barDimensions.strokeWidth,\n        barMargin = _barDimensions.barMargin,\n        radius = _barDimensions.radius,\n        x0 = _barDimensions.x0,\n        y0 = _barDimensions.y0,\n        X = _barDimensions.X,\n        Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            barLength *= (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\r\n * Draws gauge bar\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x x-coordinate of the top-left corner of the gauge\r\n * @param {number} y y-coordinate of the top-left corner of the gauge\r\n * @param {number} w width of the gauge\r\n * @param {number} h height of the gauge\r\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Helper function to calculate bar ticks presence on the sides\r\n *\r\n * @param {string} notWhich\r\n * @param {LinearGaugeOptions} options\r\n * @return {boolean}\r\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar progress\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x x-coordinate of the top-left corner of the gauge\r\n * @param {number} y y-coordinate of the top-left corner of the gauge\r\n * @param {number} w width of the gauge\r\n * @param {number} h height of the gauge\r\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar highlighted areas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions,\n        isVertical = _context$barDimension.isVertical,\n        width = _context$barDimension.width,\n        length = _context$barDimension.length,\n        barWidth = _context$barDimension.barWidth,\n        barOffset = _context$barDimension.barOffset,\n        barMargin = _context$barDimension.barMargin,\n        X = _context$barDimension.X,\n        Y = _context$barDimension.Y,\n        ticksLength = _context$barDimension.ticksLength,\n        ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(options.minValue - entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws a tick line on a linear gauge\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {string} color\r\n * @param {number[]} ticks\r\n * @param {number} minVal\r\n * @param {number} maxVal\r\n * @param {boolean} hasLeft\r\n * @param {boolean} hasRight\r\n * @param {number} lineWidth\r\n * @param {number} lineLength\r\n */\nfunction drawLinearTicks(context, color, ticks, minVal, maxVal, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions,\n        isVertical = _context$barDimension2.isVertical,\n        length = _context$barDimension2.length,\n        barWidth = _context$barDimension2.barWidth,\n        barOffset = _context$barDimension2.barOffset,\n        barMargin = _context$barDimension2.barMargin,\n        pixelRatio = _context$barDimension2.pixelRatio,\n        width = _context$barDimension2.width,\n        X = _context$barDimension2.X,\n        Y = _context$barDimension2.Y,\n        ticksLength = _context$barDimension2.ticksLength,\n        ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors = color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n        val = ticks[i];\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws major ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options),\n        _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2),\n        hasLeft = _drawings$prepareTick2[0],\n        hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick = (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.majorTicks.length).fill(options.colorStrokeTicks || options.colorMajorTicks);\n    var ticks = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n\n    drawLinearTicks(context, colors, ticks, options.minValue, options.maxValue, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions,\n            isVertical = _context$barDimension3.isVertical,\n            length = _context$barDimension3.length,\n            width = _context$barDimension3.width,\n            barWidth = _context$barDimension3.barWidth,\n            barMargin = _context$barDimension3.barMargin,\n            barOffset = _context$barDimension3.barOffset,\n            X = _context$barDimension3.X,\n            Y = _context$barDimension3.Y,\n            ticksLength = _context$barDimension3.ticksLength,\n            pixelRatio = _context$barDimension3.pixelRatio,\n            ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws ticks stroke\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws minor ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options),\n        _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2),\n        hasLeft = _drawings$prepareTick4[0],\n        hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks ? (options.maxValue - options.minValue) / (minTicks * (options.majorTicks.length - 1)) : 0;\n\n    if (minTicks) {\n        if (options.exactTicks) {\n            var delta = BaseGauge.mod(options.majorTicks[0], minTicks) || 0;\n\n            for (; i < options.maxValue; i += minTicks) {\n                if (delta + i < options.maxValue) {\n                    ticks.push(delta + i);\n                }\n            }\n        } else {\n            for (; i < options.maxValue; i += valuePerNonExactTick) {\n                ticks.push(i);\n            }\n        }\n    }\n\n    drawLinearTicks(context, options.colorMinorTicks || options.colorStrokeTicks, ticks, options.minValue, options.maxValue, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws major tick numbers\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions,\n        isVertical = _context$barDimension4.isVertical,\n        length = _context$barDimension4.length,\n        width = _context$barDimension4.width,\n        barWidth = _context$barDimension4.barWidth,\n        barMargin = _context$barDimension4.barMargin,\n        barOffset = _context$barDimension4.barOffset,\n        X = _context$barDimension4.X,\n        Y = _context$barDimension4.Y,\n        ticksLength = _context$barDimension4.ticksLength,\n        ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = options.numbersMargin / 100 * width;\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = options.exactTicks ? ticksLength * ((tickValues[i] - options.minValue) / range) : i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft - textMargin, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight + textMargin, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft - textMargin);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge title\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions,\n        isVertical = _context$barDimension5.isVertical,\n        width = _context$barDimension5.width,\n        length = _context$barDimension5.length,\n        baseX = _context$barDimension5.baseX,\n        baseY = _context$barDimension5.baseY,\n        titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge units\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions,\n        isVertical = _context$barDimension6.isVertical,\n        width = _context$barDimension6.width,\n        length = _context$barDimension6.length,\n        baseX = _context$barDimension6.baseX,\n        baseY = _context$barDimension6.baseY,\n        unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorUnits;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(drawings.formatContext(options, options.units), textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge needles\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions,\n        isVertical = _context$barDimension7.isVertical,\n        width = _context$barDimension7.width,\n        length = _context$barDimension7.length,\n        barWidth = _context$barDimension7.barWidth,\n        barOffset = _context$barDimension7.barOffset,\n        barMargin = _context$barDimension7.barMargin,\n        ticksLength = _context$barDimension7.ticksLength,\n        X = _context$barDimension7.X,\n        Y = _context$barDimension7.Y,\n        ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (drawings.normalizedValue(options).indented - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns needle color style\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n * @return {CanvasGradient|string}\r\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws line needle shape\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws arrow needle shape\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws value box for linear gauge\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} value\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\r\n * Minimalistic HTML5 Canvas Linear Gauge\r\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\r\n     * Fired each time before gauge plate is drawn\r\n     *\r\n     * @event LinearGauge#beforePlate\r\n     */\n\n    /**\r\n     * Fired each time before gauge highlight areas are drawn\r\n     *\r\n     * @event LinearGauge#beforeHighlights\r\n     */\n\n    /**\r\n     * Fired each time before gauge minor ticks are drawn\r\n     *\r\n     * @event LinearGauge#beforeMinorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge major ticks are drawn\r\n     *\r\n     * @event LinearGauge#beforeMajorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge tick numbers are drawn\r\n     *\r\n     * @event LinearGauge#beforeNumbers\r\n     */\n\n    /**\r\n     * Fired each time before gauge title is drawn\r\n     *\r\n     * @event LinearGauge#beforeTitle\r\n     */\n\n    /**\r\n     * Fired each time before gauge units text is drawn\r\n     *\r\n     * @event LinearGauge#beforeUnits\r\n     */\n\n    /**\r\n     * Fired each time before gauge bar area is drawn\r\n     *\r\n     * @event LinearGauge#beforeBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge progress bar is drawn\r\n     *\r\n     * @event LinearGauge#beforeProgressBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge value box is drawn\r\n     *\r\n     * @event LinearGauge#beforeValueBox\r\n     */\n\n    /**\r\n     * Fired each time before gauge needle is drawn\r\n     *\r\n     * @event LinearGauge#beforeNeedle\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @param {LinearGaugeOptions} options\r\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, LinearGauge.configure(options)));\n    }\n\n    /**\r\n     * Checks and updates gauge options properly\r\n     *\r\n     * @param {*} options\r\n     * @return {*}\r\n     * @access protected\r\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n\n\n        /* istanbul ignore next */\n        /**\r\n         * Triggering linear gauge render on a canvas.\r\n         *\r\n         * @returns {LinearGauge}\r\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref2[0],\n                    y = _ref2[1],\n                    w = _ref2[2],\n                    h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.emit('beforePlate');\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    this.emit('beforeBar');\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    this.emit('beforeHighlights');\n                    drawLinearBarHighlights(context, options);\n                    this.emit('beforeMinorTicks');\n                    drawLinearMinorTicks(context, options);\n                    this.emit('beforeMajorTicks');\n                    drawLinearMajorTicks(context, options);\n                    this.emit('beforeNumbers');\n                    drawLinearMajorTicksNumbers(context, options);\n                    this.emit('beforeTitle');\n                    drawLinearTitle(context, options);\n                    this.emit('beforeUnits');\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit('beforeProgressBar');\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                this.emit('beforeNeedle');\n                drawLinearBarNeedle(canvas.context, options);\n                this.emit('beforeValueBox');\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n                //noinspection JSUnresolvedFunction\n                options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar('right', options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar('left', options);\n\n            if (options.value > options.maxValue) {\n                options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n                options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,DomObserver: DomObserver,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"]}